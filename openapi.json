{
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/api/oauth2/v1/token": {
      "post": {
        "summary": "Exchange Access Token 3",
        "tags": [
          "Oauth2"
        ],
        "parameters": [],
        "responses": {
          "20200": {
            "description": "寫這邊好像沒效果 不會顯示",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "example": "US10001"
                        },
                        "access_token": {
                          "type": "string"
                        },
                        "refresh_token": {
                          "type": "string",
                          "nullable": true
                        },
                        "expires_in": {
                          "type": "integer"
                        },
                        "refresh_token_expires_in": {
                          "type": "integer",
                          "nullable": true
                        }
                      },
                      "required": [
                        "user_id",
                        "access_token",
                        "expires_in"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "description": "Splashtop Client ID 2<br />*Example: 3344f690-1056-4aa3-a116-46834e65de12*",
                    "example": "3344f690-1056-4aa3-a116-46834e65de12",
                    "type": "string"
                  },
                  "code": {
                    "description": "TBD...",
                    "type": "string"
                  },
                  "state": {
                    "description": "TBD...",
                    "type": "string"
                  },
                  "code_verifier": {
                    "description": "TBD...",
                    "type": "string"
                  },
                  "grant_type": {
                    "example": "authorization_code",
                    "description": "TBD...<br />*Example: authorization_code*",
                    "type": "string"
                  },
                  "token_access_type": {
                    "enum": [
                      "offline"
                    ],
                    "null": true,
                    "description": "TBD...<br />*Allow: offline*<br />*Example: offline*",
                    "type": "string",
                    "example": "offline"
                  },
                  "client_secret": {
                    "description": "The pre-defined client secret for this client app.",
                    "type": "string"
                  }
                },
                "required": [
                  "client_id",
                  "code",
                  "state",
                  "grant_type"
                ]
              }
            }
          }
        }
      }
    },
    "/api/oauth2/v1/refresh_token": {
      "post": {
        "summary": "Exchange new Refresh Token & access Token",
        "tags": [
          "Oauth2"
        ],
        "parameters": [
          {
            "name": "grant_type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true,
            "enum": [
              "refresh_token"
            ],
            "example": "refresh_token",
            "description": "TBD...<br />*Allow: refresh_token*"
          },
          {
            "name": "refresh_token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "TBD..."
          },
          {
            "name": "client_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The pre-defined client ID for this client app."
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false,
            "example": "users,psa",
            "description": "The scopes of the requeted API privileges"
          }
        ],
        "responses": {
          "20200": {
            "description": "寫這邊好像沒效果 不會顯示",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string"
                        },
                        "refresh_token": {
                          "type": "string"
                        },
                        "expires_in": {
                          "type": "integer"
                        },
                        "refresh_token_expires_in": {
                          "type": "integer",
                          "nullable": true
                        }
                      },
                      "required": [
                        "access_token",
                        "expires_in"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          },
          "20200\n": {
            "description": "寫這邊好像沒效果 不會顯示",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/elb-health-check": {},
    "/api/open/v1/teams/{team_id}/access_permission/groups/{group_id}": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "type": "integer",
          "required": true
        },
        {
          "name": "group_id",
          "in": "path",
          "type": "integer",
          "required": true
        }
      ],
      "get": {
        "summary": "access permission computers list",
        "tags": [
          "Teams::AccessPermission::Groups::Computers"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "get computers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "computers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "group_id": {
                                "type": "integer",
                                "nullable": true
                              },
                              "online_status": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "group_id",
                              "online_status"
                            ]
                          }
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "in_charged": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          }
                        }
                      },
                      "required": [
                        "computers",
                        "groups"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/access_permission/team_members/{team_member_id}": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "type": "integer",
          "required": true
        },
        {
          "name": "team_member_id",
          "in": "path",
          "type": "integer",
          "required": true
        }
      ],
      "get": {
        "summary": "access permission computers list",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          },
          {
            "name": "team_member_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200\n": {
            "description": "get computers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "computers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "group_id": {
                                "type": "integer",
                                "nullable": true
                              },
                              "online_status": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "group_id",
                              "online_status"
                            ]
                          }
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "in_charged": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          }
                        }
                      },
                      "required": [
                        "computers",
                        "groups"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Teams::AccessPermission::TeamMembers::Computers"
        ]
      }
    },
    "/api/open/v1/teams/logs/chat_transcript": {
      "get": {
        "summary": "get event sessions chat_transcript",
        "tags": [
          "Teams::Logs"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1,
            "description": ""
          },
          {
            "name": "per_page_size",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 50,
            "description": ""
          },
          {
            "name": "session_ids",
            "in": "query",
            "type": "string",
            "required": false,
            "example": 1,
            "description": ""
          },
          {
            "name": "date_range",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 7,
            "description": ""
          },
          {
            "name": "start_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "end_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "team_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "example": 1,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "return team api sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "srs_uuid": {
                                "type": "string"
                              },
                              "src_user_email": {
                                "type": "string"
                              },
                              "src_name": {
                                "type": "string"
                              },
                              "srs_name": {
                                "type": "string"
                              },
                              "srs_owner_name": {
                                "type": "string"
                              },
                              "server_ip_addr": {
                                "type": "string"
                              },
                              "client_ip_addr": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "session_id": {
                                "type": "integer"
                              },
                              "result": {
                                "type": "string"
                              },
                              "download_url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "srs_uuid",
                              "id",
                              "src_user_email",
                              "src_name",
                              "srs_name",
                              "srs_owner_name",
                              "server_ip_addr",
                              "client_ip_addr",
                              "session_id",
                              "result",
                              "download_url"
                            ]
                          }
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_entries": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_pages",
                        "total_entries"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/logs/file_transfer": {
      "get": {
        "summary": "get event sessions file_transfer",
        "tags": [
          "Teams::Logs"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1,
            "description": ""
          },
          {
            "name": "per_page_size",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 50,
            "description": ""
          },
          {
            "name": "session_ids",
            "in": "query",
            "type": "string",
            "required": false,
            "example": 1,
            "description": ""
          },
          {
            "name": "date_range",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 7,
            "description": ""
          },
          {
            "name": "start_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "end_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "team_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "example": 1,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "return team api sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "srs_uuid": {
                                "type": "string"
                              },
                              "src_user_email": {
                                "type": "string"
                              },
                              "src_name": {
                                "type": "string"
                              },
                              "srs_name": {
                                "type": "string"
                              },
                              "srs_owner_name": {
                                "type": "string"
                              },
                              "server_ip_addr": {
                                "type": "string"
                              },
                              "client_ip_addr": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "session_id": {
                                "type": "integer"
                              },
                              "file_name": {
                                "type": "string"
                              },
                              "size": {
                                "type": "string"
                              },
                              "transfer": {
                                "type": "string"
                              },
                              "result": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "srs_uuid",
                              "id",
                              "src_user_email",
                              "src_name",
                              "srs_name",
                              "srs_owner_name",
                              "server_ip_addr",
                              "client_ip_addr",
                              "session_id",
                              "file_name",
                              "size",
                              "transfer",
                              "result"
                            ]
                          }
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_entries": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_pages",
                        "total_entries"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/logs/histories": {
      "get": {
        "summary": "history logs",
        "tags": [
          "Teams::Logs"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "start_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "end_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1,
            "description": ""
          },
          {
            "name": "per_page_size",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "example": 1,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "sos owner get all team log by specify team_id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/logs/windows_updates": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "type": "integer",
          "required": true,
          "example": 1
        }
      ],
      "get": {
        "summary": "Get Windows Update Log list",
        "tags": [
          "Teams::Logs"
        ],
        "description": "Get windows update logs. JSON response only, CSV is not supported.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "start_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "end_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1,
            "description": ""
          },
          {
            "name": "per_page_size",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 10,
            "description": ""
          },
          {
            "name": "status",
            "in": "query",
            "type": "integer",
            "required": false,
            "enum": [
              "all",
              "finished",
              "unfinished"
            ],
            "default": "all",
            "example": "all",
            "description": "*Allow: all, finished, unfinished*"
          },
          {
            "name": "group_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "example": 1,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "example": 1,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "Params correct return all logs under your team (by page)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "start_time": {
                          "type": "string",
                          "format": "YYYY-MM-DD HH:MM:SS",
                          "example": "2022-10-12 08:22:33"
                        },
                        "end_time": {
                          "type": "string",
                          "format": "YYYY-MM-DD HH:MM:SS",
                          "example": "2022-10-22 13:22:03"
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "per_page_size": {
                          "type": "integer",
                          "example": 10
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "all",
                            "finished",
                            "unfinished"
                          ],
                          "example": "all"
                        },
                        "group_id": {
                          "type": "integer",
                          "example": 1,
                          "nullable": true
                        },
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "server_name": {
                                "type": "string",
                                "nullable": true
                              },
                              "group_name": {
                                "type": "string",
                                "nullable": true
                              },
                              "spid": {
                                "type": "string",
                                "format": "email"
                              },
                              "complete_time": {
                                "type": "string",
                                "format": "YYYY-MM-DD HH:MM:SS",
                                "example": "2022-09-12 08:22:33",
                                "nullable": true
                              },
                              "state": {
                                "type": "string",
                                "example": "finished"
                              },
                              "code": {
                                "type": "integer",
                                "nullable": true
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "start_time",
                        "end_time",
                        "page",
                        "per_page_size",
                        "status",
                        "group_id",
                        "logs"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/computers": {
      "get": {
        "summary": "TBD",
        "tags": [
          "Teams::Computers"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "example": 1,
            "description": "TBD"
          },
          {
            "name": "feature",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "one_to_many",
            "description": "TBD"
          },
          {
            "name": "ids",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "1,2,3",
            "description": "TBD"
          },
          {
            "name": "customized_fields",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "id,uuid",
            "description": "TBD"
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "TBD",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "uuid": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "host_name": {
                            "type": "string"
                          },
                          "os_logon": {
                            "type": "boolean"
                          },
                          "last_online": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "uuid",
                          "host_name",
                          "os_logon",
                          "last_online"
                        ]
                      }
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          },
          "20200\n": {
            "description": "TBD",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "group_id": {
                            "type": "integer"
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "pubip": {
                            "type": "string",
                            "nullable": true
                          },
                          "local_ip": {
                            "type": "string",
                            "nullable": true
                          },
                          "version": {
                            "type": "string",
                            "nullable": true
                          },
                          "online_status": {
                            "type": "boolean"
                          },
                          "last_online": {
                            "type": "string",
                            "nullable": true,
                            "example": "2023-07-07 08:45:11",
                            "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                          },
                          "last_session": {
                            "type": "string",
                            "nullable": true,
                            "example": "2023-07-07 08:45:11",
                            "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                          },
                          "is_device_owner": {
                            "type": "boolean"
                          },
                          "policy_flag": {
                            "type": "integer",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "group_id",
                          "email",
                          "pubip",
                          "local_ip",
                          "online_status",
                          "version",
                          "online_status",
                          "last_online",
                          "last_session",
                          "is_device_owner",
                          "policy_flag"
                        ]
                      }
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "get 5000 computers",
        "tags": [
          "Teams::Computers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "default": 1,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "return computers list with id, uuid, name, host_name, last_online, os_logon",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "uuid": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "host_name": {
                            "type": "string"
                          },
                          "last_online": {
                            "type": "string"
                          },
                          "os_logon": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "uuid",
                          "name",
                          "host_name",
                          "last_online",
                          "os_logon"
                        ]
                      }
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "feature": {
                    "schema": {
                      "type": "string",
                      "example": "one_to_many"
                    },
                    "name": "feature",
                    "description": ""
                  },
                  "ids": {
                    "schema": {
                      "type": "string",
                      "example": "1,2,3"
                    },
                    "name": "ids",
                    "description": ""
                  },
                  "customized_fields": {
                    "schema": {
                      "type": "string",
                      "example": "id,uuid"
                    },
                    "name": "customized_fields",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/computers/{id}": {
      "delete": {
        "summary": "delete computers",
        "tags": [
          "Computers"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200\n": {
            "description": "unlink success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/psa/channel_list": {
      "parameters": [
        {
          "name": "team_id",
          "in": "path",
          "type": "integer",
          "required": true
        }
      ],
      "get": {
        "summary": "Get the Service Desk PSA channel list",
        "tags": [
          "Teams::SupportSession"
        ],
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "TBD..."
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "Bearer #{The acquired API JWT token}"
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The team ID learned via the ./basic_info API."
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "寫這邊好像沒效果 不會顯示",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "private": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "default": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "default"
                          ]
                        },
                        "channels": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "default": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "default"
                            ]
                          }
                        }
                      },
                      "required": [
                        "private",
                        "channels"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/psa/support_sessions": {
      "post": {
        "summary": "Create a PSA support session",
        "tags": [
          "Teams::SupportSession"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "Bearer #{The acquired API JWT token}"
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The team ID learned via the ./basic_info API."
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "寫這邊好像沒效果 不會顯示",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string"
                        },
                        "support_session": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "channel_id": {
                              "type": "integer"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "category": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "priority": {
                              "type": "integer"
                            },
                            "expires_at": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "status": {
                              "type": "string"
                            },
                            "status_since": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "unsolved_events": {
                              "type": "integer"
                            },
                            "assignee_id": {
                              "type": "integer"
                            },
                            "assignee_email": {
                              "type": "string",
                              "nullable": true
                            },
                            "assigned_at": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "assistant_1_id": {
                              "type": "integer"
                            },
                            "assistant_1_email": {
                              "type": "string",
                              "nullable": true
                            },
                            "assistant_1_mode": {
                              "type": "integer"
                            },
                            "assistant_2_id": {
                              "type": "integer"
                            },
                            "assistant_2_email": {
                              "type": "string",
                              "nullable": true
                            },
                            "assistant_2_mode": {
                              "type": "integer"
                            },
                            "server_id": {
                              "type": "integer"
                            },
                            "server_feature_capability_hex": {
                              "type": "string",
                              "nullable": true
                            },
                            "server_name": {
                              "type": "string",
                              "nullable": true
                            },
                            "server_os": {
                              "type": "integer",
                              "nullable": true
                            },
                            "associated_at": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "acquired_permission": {
                              "type": "integer"
                            },
                            "unattended_until": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "requesting_permission_id": {
                              "type": "integer",
                              "nullable": true
                            },
                            "online_since": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "os_logon_now": {
                              "type": "boolean",
                              "nullable": true
                            },
                            "offline_since": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "connected_since": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "support_portal_link": {
                              "type": "string"
                            },
                            "card_name": {
                              "type": "string",
                              "nullable": true
                            },
                            "source_name": {
                              "type": "string",
                              "nullable": true
                            },
                            "created_by": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string",
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "updated_at": {
                              "type": "string",
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "customer_name": {
                              "type": "string",
                              "nullable": true
                            },
                            "customer_issue": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "id",
                            "channel_id",
                            "kind",
                            "category",
                            "code",
                            "name",
                            "priority",
                            "expires_at",
                            "status",
                            "status_since",
                            "unsolved_events",
                            "assignee_id",
                            "assignee_email",
                            "assigned_at",
                            "assistant_1_id",
                            "assistant_1_email",
                            "assistant_1_mode",
                            "assistant_2_id",
                            "assistant_2_email",
                            "assistant_2_mode",
                            "server_id",
                            "associated_at",
                            "acquired_permission",
                            "unattended_until",
                            "requesting_permission_id",
                            "support_portal_link",
                            "card_name",
                            "source_name",
                            "created_by",
                            "created_at",
                            "updated_at"
                          ]
                        }
                      },
                      "required": [
                        "action",
                        "support_session"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          },
          "20200\n": {
            "description": "寫這邊好像沒效果 不會顯示",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string"
                        },
                        "support_session": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "channel_id": {
                              "type": "integer"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "category": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "priority": {
                              "type": "integer"
                            },
                            "expires_at": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "status": {
                              "type": "string"
                            },
                            "status_since": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "unsolved_events": {
                              "type": "integer"
                            },
                            "assignee_id": {
                              "type": "integer"
                            },
                            "assignee_email": {
                              "type": "string",
                              "nullable": true
                            },
                            "assigned_at": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "assistant_1_id": {
                              "type": "integer"
                            },
                            "assistant_1_email": {
                              "type": "string",
                              "nullable": true
                            },
                            "assistant_1_mode": {
                              "type": "integer"
                            },
                            "assistant_2_id": {
                              "type": "integer"
                            },
                            "assistant_2_email": {
                              "type": "string",
                              "nullable": true
                            },
                            "assistant_2_mode": {
                              "type": "integer"
                            },
                            "server_id": {
                              "type": "integer"
                            },
                            "server_feature_capability_hex": {
                              "type": "string",
                              "nullable": true
                            },
                            "server_name": {
                              "type": "string",
                              "nullable": true
                            },
                            "server_os": {
                              "type": "integer",
                              "nullable": true
                            },
                            "associated_at": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "acquired_permission": {
                              "type": "integer"
                            },
                            "unattended_until": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "requesting_permission_id": {
                              "type": "integer",
                              "nullable": true
                            },
                            "online_since": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "os_logon_now": {
                              "type": "boolean",
                              "nullable": true
                            },
                            "offline_since": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "connected_since": {
                              "type": "string",
                              "nullable": true,
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "support_portal_link": {
                              "type": "string"
                            },
                            "card_name": {
                              "type": "string",
                              "nullable": true
                            },
                            "source_name": {
                              "type": "string",
                              "nullable": true
                            },
                            "created_by": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string",
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "updated_at": {
                              "type": "string",
                              "example": "2023-07-07 08:45:12",
                              "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                            },
                            "customer_name": {
                              "type": "string",
                              "nullable": true
                            },
                            "customer_issue": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "id",
                            "channel_id",
                            "kind",
                            "category",
                            "code",
                            "name",
                            "priority",
                            "expires_at",
                            "status",
                            "status_since",
                            "unsolved_events",
                            "assignee_id",
                            "assignee_email",
                            "assigned_at",
                            "assistant_1_id",
                            "assistant_1_email",
                            "assistant_1_mode",
                            "assistant_2_id",
                            "assistant_2_email",
                            "assistant_2_mode",
                            "server_id",
                            "associated_at",
                            "acquired_permission",
                            "unattended_until",
                            "requesting_permission_id",
                            "support_portal_link",
                            "card_name",
                            "source_name",
                            "created_by",
                            "created_at",
                            "updated_at"
                          ]
                        }
                      },
                      "required": [
                        "action",
                        "support_session"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "channel_id": {
                    "type": "integer",
                    "description": "The channel ID (learned via the channel_list API) of the created support session to be added to."
                  },
                  "customer_name": {
                    "type": "string",
                    "description": "The name of the supported customer"
                  },
                  "customer_issue": {
                    "type": "string",
                    "description": "The issue desccription"
                  }
                },
                "required": [
                  "channel_id",
                  "customer_name"
                ]
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/psa/support_sessions/{id}": {
      "get": {
        "summary": "Get the details of a support session",
        "tags": [
          "Teams::SupportSession"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The ID of the support session to be queried."
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "Bearer #{The acquired API JWT token}"
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The team ID learned via the ./basic_info API."
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "寫這邊好像沒效果 不會顯示",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "channel_id": {
                          "type": "integer"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "category": {
                          "type": "integer"
                        },
                        "code": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "priority": {
                          "type": "integer"
                        },
                        "expires_at": {
                          "type": "string",
                          "nullable": true,
                          "example": "2023-07-07 08:45:12",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "status": {
                          "type": "string"
                        },
                        "status_since": {
                          "type": "string",
                          "nullable": true,
                          "example": "2023-07-07 08:45:12",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "unsolved_events": {
                          "type": "integer"
                        },
                        "assignee_id": {
                          "type": "integer"
                        },
                        "assignee_email": {
                          "type": "string",
                          "nullable": true
                        },
                        "assigned_at": {
                          "type": "string",
                          "nullable": true,
                          "example": "2023-07-07 08:45:12",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "assistant_1_id": {
                          "type": "integer"
                        },
                        "assistant_1_email": {
                          "type": "string",
                          "nullable": true
                        },
                        "assistant_1_mode": {
                          "type": "integer"
                        },
                        "assistant_2_id": {
                          "type": "integer"
                        },
                        "assistant_2_email": {
                          "type": "string",
                          "nullable": true
                        },
                        "assistant_2_mode": {
                          "type": "integer"
                        },
                        "server_id": {
                          "type": "integer"
                        },
                        "server_feature_capability_hex": {
                          "type": "string",
                          "nullable": true
                        },
                        "server_name": {
                          "type": "string",
                          "nullable": true
                        },
                        "server_os": {
                          "type": "integer",
                          "nullable": true
                        },
                        "associated_at": {
                          "type": "string",
                          "nullable": true,
                          "example": "2023-07-07 08:45:12",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "acquired_permission": {
                          "type": "integer"
                        },
                        "unattended_until": {
                          "type": "string",
                          "nullable": true,
                          "example": "2023-07-07 08:45:12",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "requesting_permission_id": {
                          "type": "integer",
                          "nullable": true
                        },
                        "online_since": {
                          "type": "string",
                          "nullable": true,
                          "example": "2023-07-07 08:45:12",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "os_logon_now": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "offline_since": {
                          "type": "string",
                          "nullable": true,
                          "example": "2023-07-07 08:45:12",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "connected_since": {
                          "type": "string",
                          "nullable": true,
                          "example": "2023-07-07 08:45:12",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "support_portal_link": {
                          "type": "string"
                        },
                        "card_name": {
                          "type": "string",
                          "nullable": true
                        },
                        "source_name": {
                          "type": "string",
                          "nullable": true
                        },
                        "created_by": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string",
                          "example": "2023-07-07 08:45:12",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "2023-07-07 08:45:12",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "customer_name": {
                          "type": "string",
                          "nullable": true
                        },
                        "customer_issue": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "channel_id",
                        "kind",
                        "category",
                        "code",
                        "name",
                        "priority",
                        "expires_at",
                        "status",
                        "status_since",
                        "unsolved_events",
                        "assignee_id",
                        "assignee_email",
                        "assigned_at",
                        "assistant_1_id",
                        "assistant_1_email",
                        "assistant_1_mode",
                        "assistant_2_id",
                        "assistant_2_email",
                        "assistant_2_mode",
                        "server_id",
                        "associated_at",
                        "acquired_permission",
                        "unattended_until",
                        "requesting_permission_id",
                        "support_portal_link",
                        "card_name",
                        "source_name",
                        "created_by",
                        "created_at",
                        "updated_at"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/users": {
      "get": {
        "summary": "TBD",
        "tags": [
          "Teams::Users"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "example": 1,
            "description": "TBD"
          },
          {
            "name": "ids",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "1,2,3",
            "description": "TBD"
          },
          {
            "name": "customized_fields",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "id,status,role,email",
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "TBD",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "email": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "email",
                          "status",
                          "role"
                        ]
                      }
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          },
          "20200\n": {
            "description": "TBD",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "email": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "xauth_method_id": {
                            "type": "integer",
                            "nullable": true
                          },
                          "member_name": {
                            "type": "string",
                            "nullable": true
                          },
                          "status": {
                            "type": "string"
                          },
                          "invite_code": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "email",
                          "role",
                          "xauth_method_id",
                          "member_name",
                          "status",
                          "invite_code"
                        ]
                      }
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "get 5000 members",
        "tags": [
          "Teams::Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "example": 1,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "return team members list with default_fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "email": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "email",
                          "status",
                          "role"
                        ]
                      }
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "schema": {
                      "type": "string",
                      "example": "1,2,3"
                    },
                    "name": "ids",
                    "description": ""
                  },
                  "customized_fields": {
                    "schema": {
                      "type": "string",
                      "example": "id,status,role,email"
                    },
                    "name": "customized_fields",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/users/basic_info": {
      "get": {
        "summary": "Fetch User Email / Name / Scope features",
        "tags": [
          "Users"
        ],
        "description": "Using token to get user basic info",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "Bearer #{The acquired API JWT token}"
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200\n": {
            "description": "寫這邊好像沒效果 不會顯示",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Alphonse Elric"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "scopes": {
                          "type": "object",
                          "properties": {
                            "psa": {
                              "type": "object",
                              "properties": {
                                "team_id": {
                                  "type": "integer",
                                  "example": 1
                                }
                              }
                            },
                            "service_desk": {
                              "type": "object",
                              "properties": {
                                "team_id": {
                                  "type": "integer",
                                  "example": 2
                                }
                              }
                            },
                            "logs": {
                              "type": "object",
                              "properties": {
                                "sos_team_id": {
                                  "type": "integer",
                                  "example": 3
                                },
                                "stb_team_id": {
                                  "type": "integer",
                                  "example": 4
                                }
                              }
                            }
                          }
                        },
                        "time_zone": {
                          "type": "string",
                          "example": "Tokyo",
                          "nullable": true
                        },
                        "time_zone_minutes": {
                          "type": "integer",
                          "example": 480
                        }
                      },
                      "required": [
                        "name",
                        "email",
                        "time_zone",
                        "time_zone_minutes"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/groups/{group_id}/members": {
      "get": {
        "summary": "get members",
        "tags": [
          "Teams::Groups::Members"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "show group members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/groups/{group_id}/members/change": {
      "put": {
        "summary": "assign members to group",
        "tags": [
          "Teams::Groups::Members"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "assign / remove group members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "fail": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      },
                      "required": [
                        "success",
                        "fail"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "add_members": {
                    "type": "array",
                    "null": true,
                    "description": ""
                  },
                  "remove_members": {
                    "type": "array",
                    "null": true,
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/groups/{group_id}/computers": {
      "get": {
        "summary": "get computers",
        "tags": [
          "Teams::Groups::Computers"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "show group computers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/groups/{group_id}/computers/change": {
      "put": {
        "summary": "assign computers to group",
        "tags": [
          "Teams::Groups::Computers"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "assign / remove group computers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "fail": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      },
                      "required": [
                        "success",
                        "fail"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "add_computers": {
                    "type": "array",
                    "null": true,
                    "description": ""
                  },
                  "remove_computers": {
                    "type": "array",
                    "null": true,
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/groups": {
      "post": {
        "summary": "create group",
        "tags": [
          "Teams::Groups"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "create success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_member_group": {
                    "type": "boolean",
                    "description": ""
                  },
                  "is_computer_group": {
                    "type": "boolean",
                    "description": ""
                  },
                  "name": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "get groups",
        "tags": [
          "Teams::Groups"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          },
          {
            "name": "members_count",
            "in": "query",
            "type": "boolean",
            "null": true,
            "required": false,
            "description": ""
          },
          {
            "name": "member_status",
            "in": "query",
            "type": "boolean",
            "null": true,
            "required": false,
            "description": ""
          },
          {
            "name": "computers_count",
            "in": "query",
            "type": "boolean",
            "null": true,
            "required": false,
            "description": ""
          },
          {
            "name": "admins_count",
            "in": "query",
            "type": "boolean",
            "null": true,
            "required": false,
            "description": ""
          },
          {
            "name": "group_type",
            "in": "query",
            "type": "string",
            "null": true,
            "required": false,
            "description": ""
          },
          {
            "name": "ids",
            "in": "query",
            "type": "string",
            "null": true,
            "required": false,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "show all groups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "computers_count": {
                            "type": "integer"
                          },
                          "members_count": {
                            "type": "integer"
                          },
                          "admins_count": {
                            "type": "integer"
                          },
                          "is_computer_group": {
                            "type": "boolean"
                          },
                          "is_member_group": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "computers_count",
                          "members_count",
                          "admins_count"
                        ]
                      }
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/groups/{id}": {
      "get": {
        "summary": "show group detail",
        "tags": [
          "Teams::Groups"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "show group detail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "is_computer_group": {
                          "type": "boolean"
                        },
                        "is_member_group": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "is_computer_group",
                        "is_member_group"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "update group",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "update success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_member_group": {
                    "type": "boolean",
                    "description": ""
                  },
                  "is_computer_group": {
                    "type": "boolean",
                    "description": ""
                  },
                  "name": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete group",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "Delete Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/groups/admins": {
      "get": {
        "summary": "get team's group admins",
        "tags": [
          "Teams::Groups::Admins"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "show group admins",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/logs/alerts": {
      "get": {
        "summary": "get alert logs",
        "tags": [
          "Teams::Logs"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "example": 1,
            "description": ""
          },
          {
            "name": "start_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "end_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1,
            "description": ""
          },
          {
            "name": "per_page_size",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 10,
            "description": ""
          },
          {
            "name": "alert_code",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "cpu",
              "memory",
              "free_disk",
              "online",
              "offline",
              "sw_added",
              "sw_removed",
              "update_policy",
              "available_updates",
              "event"
            ],
            "example": "cpu,memory",
            "description": "*Allow: cpu, memory, free_disk, online, offline, sw_added, sw_removed, update_policy, available_updates, event*"
          },
          {
            "name": "alert_log_status",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "unack",
              "unsolved"
            ],
            "example": "unack",
            "description": "*Allow: unack, unsolved*"
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "get alert logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "start_time": {
                          "type": "string",
                          "format": "YYYY-MM-DD HH:MM:SS",
                          "example": "2022-10-12 08:22:33"
                        },
                        "end_time": {
                          "type": "string",
                          "format": "YYYY-MM-DD HH:MM:SS",
                          "example": "2022-10-22 13:22:03"
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "per_page_size": {
                          "type": "integer",
                          "example": 10
                        },
                        "alert_log_status": {
                          "type": "string",
                          "nullable": true
                        },
                        "alert_code": {
                          "type": "string",
                          "nullable": true
                        },
                        "total": {
                          "type": "integer"
                        },
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "details": {
                                "type": "string",
                                "nullable": true
                              },
                              "reported_at": {
                                "type": "string",
                                "format": "YYYY-MM-DD HH:MM:SS",
                                "example": "2022-10-12 08:22:33"
                              },
                              "triggered_at": {
                                "type": "string",
                                "format": "YYYY-MM-DD HH:MM:SS",
                                "example": "2022-10-12 08:22:33"
                              },
                              "acknowledged_at": {
                                "type": "string",
                                "format": "YYYY-MM-DD HH:MM:SS",
                                "example": "2022-10-12 08:22:33"
                              },
                              "solved_at": {
                                "type": "string",
                                "format": "YYYY-MM-DD HH:MM:SS",
                                "example": "2022-10-12 08:22:33"
                              },
                              "comment": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "start_time",
                        "end_time",
                        "total",
                        "per_page_size",
                        "page",
                        "logs"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/logs/antiviruses": {
      "get": {
        "summary": "get antivirus logs",
        "tags": [
          "Teams::Logs"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "example": 1,
            "description": ""
          },
          {
            "name": "start_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "end_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1,
            "description": ""
          },
          {
            "name": "per_page_size",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 10,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "get antivirus logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "start_time": {
                          "type": "string",
                          "format": "YYYY-MM-DD HH:MM:SS",
                          "example": "2022-10-12 08:22:33"
                        },
                        "end_time": {
                          "type": "string",
                          "format": "YYYY-MM-DD HH:MM:SS",
                          "example": "2022-10-22 13:22:03"
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "per_page_size": {
                          "type": "integer",
                          "example": 10
                        },
                        "total": {
                          "type": "integer"
                        },
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "YYYY-MM-DD HH:MM:SS",
                                "example": "2022-10-12 08:22:33"
                              },
                              "splashtop_account": {
                                "type": "string",
                                "nullable": true
                              },
                              "detail": {
                                "type": "string"
                              },
                              "ip_addr": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "start_time",
                        "end_time",
                        "total",
                        "per_page_size",
                        "page",
                        "logs"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/logs/closed_sessions": {},
    "/api/open/v1/teams/{team_id}/logs/one_to_many/computer_based": {
      "get": {
        "summary": "get alert logs",
        "tags": [
          "Teams::Logs"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "example": 1,
            "description": ""
          },
          {
            "name": "start_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "end_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1,
            "description": ""
          },
          {
            "name": "per_page_size",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 10,
            "description": ""
          },
          {
            "name": "action_kind",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              9,
              10
            ],
            "example": "1,3,5",
            "description": "1: system_reboot, 2: windows_updates, 3: remote_command<br>4: executable_file, 5: remote_command_mac, 6: executable_file_mac<br>7: msi_file, 9: file_dispatch, 10: file_dispatch_mac<br />*Allow: 1, 2, 3, 4, 5, 6, 7, 9, 10*"
          },
          {
            "name": "result",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              1,
              0
            ],
            "description": "1: complete, 0: failed<br />*Allow: 1, 0*",
            "example": 1
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "get one to many - computer based logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "start_time": {
                          "type": "string",
                          "format": "YYYY-MM-DD HH:MM:SS",
                          "example": "2022-10-12 08:22:33"
                        },
                        "end_time": {
                          "type": "string",
                          "format": "YYYY-MM-DD HH:MM:SS",
                          "example": "2022-10-22 13:22:03"
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "per_page_size": {
                          "type": "integer",
                          "example": 10
                        },
                        "action_kind": {
                          "type": "string",
                          "nullable": true
                        },
                        "result": {
                          "type": "string",
                          "nullable": true
                        },
                        "total": {
                          "type": "integer"
                        },
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "action_name": {
                                "type": "string"
                              },
                              "action_kind": {
                                "type": "string"
                              },
                              "computer_name": {
                                "type": "string"
                              },
                              "computer_group": {
                                "type": "string"
                              },
                              "schedule": {
                                "type": "string"
                              },
                              "result": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "start_time",
                        "end_time",
                        "total",
                        "per_page_size",
                        "page",
                        "logs"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/logs/service_desks": {
      "get": {
        "summary": "get alert logs",
        "tags": [
          "Teams::Logs"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "start_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "end_time",
            "in": "query",
            "type": "string",
            "format": "YYYY-MM-DD HH:MM:SS",
            "required": false,
            "example": "2022-10-11 08:22:33",
            "description": "<b>format</b>: YYYY-MM-DD HH:MM:SS<br>\n<b>minimun</b>: first_day of month one years ago(at 00:00:00)<br>\n<b>maximun</b>: last_day of this month(at 23:59:59)<br>\n<b>default_start_time</b>: 6.days.ago(at 00:00:00)<br>\n<b>default_end_time</b>: [start_time + 7.days, maximun].min<br>\nend_time must bigger then start_time, end_time - start_time must less then 90.days<br>\nif end_time exists, start_time must exists\n"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 1,
            "description": ""
          },
          {
            "name": "per_page_size",
            "in": "query",
            "type": "integer",
            "required": false,
            "default": 10,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "get service_desk logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "start_time": {
                          "type": "string",
                          "format": "YYYY-MM-DD HH:MM:SS",
                          "example": "2022-10-12 08:22:33"
                        },
                        "end_time": {
                          "type": "string",
                          "format": "YYYY-MM-DD HH:MM:SS",
                          "example": "2022-10-22 13:22:03"
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "per_page_size": {
                          "type": "integer",
                          "example": 10
                        },
                        "total": {
                          "type": "integer"
                        },
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "team_id": {
                                "type": "integer"
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "splashtop_account": {
                                "type": "string"
                              },
                              "details": {
                                "type": "string"
                              },
                              "channel_id": {
                                "type": "integer",
                                "nullable": true
                              },
                              "channel_name": {
                                "type": "string",
                                "nullable": true
                              },
                              "ip_addr": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "start_time",
                        "end_time",
                        "total",
                        "per_page_size",
                        "page",
                        "logs"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/inventory": {
      "post": {
        "summary": "TBD",
        "tags": [
          "Teams::Servers::Inventories"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "TBD"
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "TBD",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "server_name": {
                            "type": "string"
                          },
                          "group_id": {
                            "type": "integer"
                          },
                          "dev_uuid": {
                            "type": "string"
                          },
                          "os": {
                            "type": "string"
                          },
                          "inventory_version": {
                            "type": "string"
                          },
                          "local_time": {
                            "type": "string"
                          },
                          "system": {
                            "type": "object",
                            "properties": {
                              "computer_name": {
                                "type": "string",
                                "nullable": true
                              },
                              "operating_system": {
                                "type": "string"
                              },
                              "domain": {
                                "type": "string",
                                "nullable": true
                              },
                              "time_zone": {
                                "type": "string"
                              },
                              "last_logon_user": {
                                "type": "string",
                                "nullable": true
                              },
                              "last_boot_time": {
                                "type": "string"
                              },
                              "build_no": {
                                "type": "string",
                                "nullable": true
                              },
                              "language": {
                                "type": "string",
                                "nullable": true
                              },
                              "users": {
                                "type": "array",
                                "items": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "last_login": {
                                    "type": "string"
                                  },
                                  "group": {
                                    "type": "string"
                                  },
                                  "domain": {
                                    "type": "string"
                                  },
                                  "local_user": {
                                    "type": "boolean"
                                  },
                                  "profile_size": {
                                    "type": "integer"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                },
                                "nullable": true
                              }
                            }
                          },
                          "hardware": {
                            "type": "object",
                            "properties": {
                              "manufacturer": {
                                "type": "string",
                                "nullable": true
                              },
                              "model": {
                                "type": "string"
                              },
                              "product": {
                                "type": "string",
                                "nullable": true
                              },
                              "serial_number": {
                                "type": "string",
                                "nullable": true
                              },
                              "motherboard": {
                                "type": "object",
                                "properties": {
                                  "serial_number": {
                                    "type": "string"
                                  },
                                  "chipset": {
                                    "type": "string"
                                  },
                                  "memory_slots": {
                                    "type": "integer"
                                  },
                                  "bios_version": {
                                    "type": "string"
                                  },
                                  "bios_serial_number": {
                                    "type": "string"
                                  },
                                  "smc_version": {
                                    "type": "string"
                                  }
                                },
                                "nullable": true
                              },
                              "processor": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "speed": {
                                      "type": "integer"
                                    },
                                    "slot": {
                                      "type": "integer",
                                      "nullable": true
                                    },
                                    "number_of_cores": {
                                      "type": "integer"
                                    },
                                    "number_of_logical_processors": {
                                      "type": "integer",
                                      "nullable": true
                                    },
                                    "abi": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              },
                              "memory": {
                                "type": "object",
                                "properties": {
                                  "modules": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "manufacturer": {
                                          "type": "string"
                                        },
                                        "size": {
                                          "type": "integer"
                                        },
                                        "speed": {
                                          "type": "integer"
                                        },
                                        "slot": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "size": {
                                    "type": "integer"
                                  }
                                },
                                "nullable": true
                              },
                              "display_driver": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "vram": {
                                      "type": "integer"
                                    },
                                    "resolution": {
                                      "type": "string"
                                    },
                                    "slot": {
                                      "type": "integer"
                                    },
                                    "version": {
                                      "type": "string"
                                    },
                                    "date": {
                                      "type": "string"
                                    },
                                    "bus": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "nullable": true
                              },
                              "network": {
                                "type": "object",
                                "properties": {
                                  "interface": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "physical_address_mac": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "speed": {
                                          "type": "integer",
                                          "nullable": true
                                        },
                                        "ip_address": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true
                                        },
                                        "subnet_mask": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true
                                        },
                                        "dhcp_server": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "default_gateway": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "domain_name_server": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true
                                        },
                                        "primary_wins": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true
                                        },
                                        "status": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "mtu": {
                                          "type": "integer",
                                          "nullable": true
                                        },
                                        "is_virtual": {
                                          "type": "boolean",
                                          "nullable": true
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "drive": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "serial_number": {
                                      "type": "string"
                                    },
                                    "capacity": {
                                      "type": "integer"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "partition": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "drive": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "mount_point": {
                                            "type": "string"
                                          },
                                          "file_system": {
                                            "type": "string"
                                          },
                                          "used_space": {
                                            "type": "integer"
                                          },
                                          "free_space": {
                                            "type": "integer"
                                          },
                                          "capacity": {
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "nullable": true
                              },
                              "battery": {
                                "type": "object",
                                "properties": {
                                  "health": {
                                    "type": "string"
                                  },
                                  "remaining": {
                                    "type": "integer"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "temperature": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "voltage": {
                                    "type": "string"
                                  }
                                },
                                "nullable": true
                              },
                              "ram": {
                                "type": "object",
                                "properties": {
                                  "free": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "total": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "used": {
                                    "type": "number",
                                    "format": "double"
                                  }
                                },
                                "nullable": true
                              },
                              "rom": {
                                "type": "object",
                                "properties": {
                                  "free": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "total": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "used": {
                                    "type": "number",
                                    "format": "double"
                                  }
                                },
                                "nullable": true
                              },
                              "bluetooth_device": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "address": {
                                      "type": "string"
                                    },
                                    "major": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "integer"
                                    }
                                  }
                                },
                                "nullable": true
                              },
                              "usb_device": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "manufacturer": {
                                      "type": "string"
                                    },
                                    "product_id": {
                                      "type": "string"
                                    },
                                    "product_name": {
                                      "type": "string"
                                    },
                                    "serial_number": {
                                      "type": "string"
                                    },
                                    "vendor_id": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "nullable": true
                              },
                              "screen": {
                                "type": "object",
                                "properties": {
                                  "density_dpi": {
                                    "type": "integer"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "resolution": {
                                    "type": "string"
                                  }
                                },
                                "nullable": true
                              }
                            }
                          },
                          "software": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "version": {
                                  "type": "string"
                                },
                                "install_date": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "vendor": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "package_name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "size": {
                                  "type": "number",
                                  "format": "double",
                                  "nullable": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "id",
                          "server_name",
                          "group_id",
                          "dev_uuid",
                          "os",
                          "inventory_version",
                          "local_time",
                          "system",
                          "hardware",
                          "software"
                        ]
                      }
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "TBD",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "required": false
                      }
                    },
                    "name": "ids",
                    "description": "```json\n[\n\t\"0// Example / Type: <integer>\"\n]\n```"
                  }
                },
                "required": [
                  "ids"
                ]
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/psa/support_sessions/{id}/session_logs": {
      "get": {
        "summary": "Get connection logs of a support session",
        "tags": [
          "Teams::SupportSessions::SessionLogs"
        ],
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The start time of the session logs in UTC+0. "
          },
          {
            "name": "end_time",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The end time of the session logs in UTC+0. "
          },
          {
            "name": "per_page_size",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "The max number of logs per query. (between 10 and 100, for pagination)"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "The number of the page to be queried. (for pagination, starting from 1, default = 1)"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "asc or desc, default = desc"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "Bearer #{The acquired API JWT token}"
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The team ID learned via the ./basic_info API."
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The ID of the support session to be queried."
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "寫這邊好像沒效果 不會顯示",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "support_session_id": {
                          "type": "integer"
                        },
                        "start_time": {
                          "type": "string",
                          "example": "2023-07-07 08:45:11",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "end_time": {
                          "type": "string",
                          "example": "2023-07-07 08:45:11",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "per_page_size": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "order": {
                          "type": "string"
                        },
                        "session_logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "service_kind": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "duration": {
                                "type": "integer"
                              },
                              "src_user_email": {
                                "type": "string"
                              },
                              "src_name": {
                                "type": "string"
                              },
                              "client_ip_addr": {
                                "type": "string"
                              },
                              "srs_name": {
                                "type": "string"
                              },
                              "server_ip_addr": {
                                "type": "string"
                              },
                              "has_file_list": {
                                "type": "boolean"
                              },
                              "has_chat_list": {
                                "type": "boolean"
                              },
                              "has_command_list": {
                                "type": "boolean"
                              },
                              "note": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "service_kind",
                              "status",
                              "duration",
                              "src_user_email",
                              "src_name",
                              "client_ip_addr",
                              "srs_name",
                              "server_ip_addr",
                              "has_file_list",
                              "has_chat_list",
                              "has_command_list",
                              "note"
                            ]
                          }
                        }
                      },
                      "required": [
                        "support_session_id",
                        "start_time",
                        "end_time",
                        "total",
                        "per_page_size",
                        "page",
                        "order",
                        "session_logs"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/psa/support_sessions/{id}/sessions/{session_id}/file_logs": {
      "get": {
        "summary": "Get the file transfer logs of a support session",
        "tags": [
          "Teams::SupportSessions::SessionLogs"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "Bearer #{The acquired API JWT token}"
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The team ID learned via the ./basic_info API."
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The ID of the support session to be queried."
          },
          {
            "name": "session_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The target session ID (learned via the ./session_logs API)"
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "寫這邊好像沒效果 不會顯示",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "support_session_id": {
                          "type": "integer"
                        },
                        "start_time": {
                          "type": "string",
                          "example": "2023-07-07 08:45:11",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "end_time": {
                          "type": "string",
                          "example": "2023-07-07 08:45:11",
                          "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "per_page_size": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "order": {
                          "type": "string"
                        },
                        "file_logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "example": "2023-07-07 08:45:11",
                                "format": "^\\d{4}-[01]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$"
                              },
                              "name": {
                                "type": "string"
                              },
                              "file_size": {
                                "type": "string"
                              },
                              "transferred_size": {
                                "type": "string"
                              },
                              "original_file_size": {
                                "type": "integer"
                              },
                              "original_transferred_size": {
                                "type": "integer"
                              },
                              "action": {
                                "type": "string"
                              },
                              "result": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "created_at",
                              "name",
                              "file_size",
                              "transferred_size",
                              "original_file_size",
                              "original_transferred_size",
                              "action",
                              "result"
                            ]
                          }
                        }
                      },
                      "required": [
                        "support_session_id",
                        "start_time",
                        "end_time",
                        "total",
                        "per_page_size",
                        "page",
                        "order",
                        "file_logs"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/teams/{team_id}/psa/support_sessions/{id}/sessions/{session_id}/chat": {
      "get": {
        "summary": "Get the chat logs of a support session",
        "tags": [
          "Teams::SupportSessions::SessionLogs"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "Get the file transfer logs of a support session"
          },
          {
            "name": "team_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Bearer #{The acquired API JWT token}"
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The team ID learned via the ./basic_info API."
          },
          {
            "name": "session_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The ID of the support session to be queried."
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "寫這邊好像沒效果 不會顯示",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "download_url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "download_url"
                      ]
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/open/v1/users/team_info": {
      "get": {
        "summary": "Get User Team info",
        "tags": [
          "Users"
        ],
        "description": "Get team info of user.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": ""
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "20200": {
            "description": "when user in team, return team info of user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "example": 20200
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "commands": {
                      "type": "object",
                      "properties": {}
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "sos": {
                          "type": "object",
                          "properties": {
                            "team_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "member": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "enabled"
                                },
                                "role": {
                                  "type": "string",
                                  "example": "technician_manager",
                                  "enum": [
                                    "owner",
                                    "technician_manager",
                                    "technician"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "stb": {
                          "type": "object",
                          "properties": {
                            "team_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "member": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "enabled"
                                },
                                "role": {
                                  "type": "string",
                                  "example": "super_admin",
                                  "enum": [
                                    "owner",
                                    "super_admin",
                                    "admin",
                                    "member"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "required": [
                    "result",
                    "messages",
                    "commands",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "consumes": [
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "{Global Region}",
      "variables": {
        "Global Region": {
          "default": "https://webapi.aws-rd.splashtop.com"
        }
      }
    },
    {
      "url": "{EU Region}",
      "variables": {
        "EU Region": {
          "default": "https://webapi.aws-rd.splashtop.eu"
        }
      }
    }
  ],
  "openapi": "3.0.0"
}